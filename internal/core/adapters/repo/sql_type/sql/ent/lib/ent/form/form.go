// Code generated by ent, DO NOT EDIT.

package form

const (
	// Label holds the string label denoting the form type in the database.
	Label = "form"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCategory holds the string denoting the category field in the database.
	FieldCategory = "category"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldIsDeleted holds the string denoting the is_deleted field in the database.
	FieldIsDeleted = "is_deleted"
	// FieldTodoID holds the string denoting the todo_id field in the database.
	FieldTodoID = "todo_id"
	// EdgeTodo holds the string denoting the todo edge name in mutations.
	EdgeTodo = "todo"
	// Table holds the table name of the form in the database.
	Table = "form"
	// TodoTable is the table that holds the todo relation/edge.
	TodoTable = "form"
	// TodoInverseTable is the table name for the Todo entity.
	// It exists in this package in order to avoid circular dependency with the "todo" package.
	TodoInverseTable = "todo"
	// TodoColumn is the table column denoting the todo relation/edge.
	TodoColumn = "todo_id"
)

// Columns holds all SQL columns for form fields.
var Columns = []string{
	FieldID,
	FieldCategory,
	FieldTitle,
	FieldStatus,
	FieldIsDeleted,
	FieldTodoID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsDeleted holds the default value on creation for the "is_deleted" field.
	DefaultIsDeleted bool
)
